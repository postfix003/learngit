一、windows安装Git-2.9.2-64-bit.exe

一路下一步，安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！

安装完成后，还需要最后一步设置，在命令行输入：

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

二、使用
参考：http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000

1.创建版本库
首先，选择一个合适的地方，创建一个空目录，如E:\git\first

2.通过git init命令把这个目录变成Git可以管理的仓库
$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/

3.把文件添加到版本库

	1.编写一个readme.txt文件，内容如下
	Git is a version control system.
	Git is free software.

	2.第一步，用命令git add告诉Git，把文件添加到仓库：
	$ git add readme.txt
	
	3.第二步，用命令git commit告诉Git，把文件提交到仓库：
	$ git commit -m "wrote a readme file"
	[master (root-commit) cb926e7] wrote a readme file
	 1 file changed, 2 insertions(+)
 	create mode 100644 readme.txt
	
4.时光机穿梭
$ git status

$ git diff readme.txt 

5.版本回退

查看历史记录
$ git log		$ git log --pretty=oneline


$ git reset --hard HEAD^
在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100

回退至指定版本
$ git reset --hard 3628164

Git提供了一个命令git reflog用来记录你的每一次命令
$ git reflog



6.撤销修改
$ git checkout -- readme.txt
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。这种情况做如下操作：
1.  $ git reset HEAD readme.txt
Git同样告诉我们，用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
2.  $ git checkout -- readme.txt

总结：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。


7.删除文件
$ git rm test.txt
$ git commit -m "remove test.txt"


8.远程仓库
先在https://github.com，注册一个用户。postfix003/postfix3	postfix003@163.com

第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
$ ssh-keygen -t rsa -C "test@test.com"

在本地C:\Users\sungymf\.ssh 目录下就有公钥id_rsa.pub，私钥id_rsa。

第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面,然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：


8.1添加远程库
	首先，登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库：
	在Repository name填入learngit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：
	目前，在GitHub上的这个learngit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。
现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：
$ git remote add origin git@github.com:postfix003/learngit.git

下一步，就可以把本地库的所有内容推送到远程库上：
$ git push -u origin master

从现在起，只要本地作了提交，就可以通过命令：
$ git push origin master
把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！


